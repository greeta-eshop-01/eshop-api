version: "3.8"

networks:
  eshop:
    driver: bridge

services:

  # Backing Services

  gateway-redis:
    image: "redis:7.0"
    container_name: "gateway-redis"
    ports:
      - 6380:6380
    networks:
      - eshop

  keycloak-postgres:
    image: postgres:15.3
    container_name: keycloak_postgres
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "pg_isready -U postgres"
    networks:
      - eshop

  eshop-keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: eshop-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-postgres
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_DB_PORT=5433
      - KC_HEALTH_ENABLED=true
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - keycloak-postgres
    healthcheck:
      test: "curl -f http://eshop-keycloak:8080/health/ready || exit 1"
    networks:
      - eshop

  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - eshop

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092:9092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    links:
      - zookeeper
    networks:
      - eshop

  postgres:
    build: docker-conf/postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: dbpass
      POSTGRES_USER: dbuser
      PGTZ: Europe/Amsterdam
      CATALOG_DB_USER: catalogdbuser
      CATALOG_DB_PASSWORD: dbpass
      CATALOG_DB_NAME: catalogdb
      RATING_DB_USER: ratingdbuser
      RATING_DB_NAME: ratingdb
      RATING_DB_PASSWORD: dbpass
      ORDER_DB_USER: orderdbuser
      ORDER_DB_PASSWORD: dbpass
      ORDER_DB_NAME: orderdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dbuser" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eshop

  redis:
    image: redis:6.2.4
    ports:
      - "6379:6379"
    restart: on-failure
    environment:
      REDIS_PASSWORD: pass
    networks:
      - eshop

  mongo:
    image: mongo:5.0.5
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - "27017:27017"
    restart: always
    networks:
      - eshop

  zipkin:
    image: openzipkin/zipkin:2.24.3
    container_name: zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9411" ]
    networks:
      - eshop
