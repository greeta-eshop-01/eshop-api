server:
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: flux-gateway
  lifecycle:
    timeout-per-shutdown-phase: 15s

  keycloak:
    server-url: http://localhost:8080
    server-external-url: http://localhost:8080
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-external-url}/realms/eshop-realm
          jwk-set-uri: ${spring.keycloak.server-url}/realms/eshop-realm/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    net.greeta.eshop: DEBUG
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG
    org.springframework:
      cloud.gateway: TRACE
      cloud.gateway.route.RouteDefinitionRouteLocator: INFO
      web.server.adapter.HttpWebHandlerAdapter: TRACE
    root: INFO
    web: INFO

info:
  system: Flux Gateway Service

jwt:
  auth:
    converter:
      resource-id: eshop-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: ${spring.keycloak.server-external-url}
    realm: eshop-realm

app:
  services:
    catalog-query: catalog-query
    catalog-command: catalog-command
    basket: basket
    order-processing: order-processing
    analytics: analytics
    rating: rating

resilience4j:
  circuitbreaker:
    #    circuitBreakerAspectOrder: 1
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
    instances:
      basket:
        baseConfig: default
      catalog-query:
        baseConfig: default
      rating:
        baseConfig: default
      order:
        baseConfig: default
        recordExceptions:
          - com.eshop.gateway.infrastructure.exception.ServiceCallFailedException

  retry:
    #    retryAspectOrder: 2
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 100
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable
    #        ignoreExceptions:
    #          - ...
    instances:
      basket:
        baseConfig: default
      rating:
        baseConfig: default
      catalog-query:
        baseConfig: default
        maxRetryAttempts: 4
        waitDuration: 1000

  ratelimiter:
    configs:
      default:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0
        eventConsumerBufferSize: 100
    instances:
      basket:
        baseConfig: default

  timelimiter:
    configs:
      default:
        cancelRunningFuture: false
        timeoutDuration: 2s
    instances:
      rating:
        baseConfig: default
        cancelRunningFuture: true
      catalog-query:
        baseConfig: default
        cancelRunningFuture: true
